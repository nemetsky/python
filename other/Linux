nemetsky/nemetsky
nemetskiy/SegNemVlad@2 (astra-work)
root/root (astra-work)

tux/passw0rd
root/passw0rd
xrandr -s 1024x768    -    размер окна терминала

!посмотреть разделы
lsblk
ls /dev/sda
fdisk -l

Ctrl+Alt+F[1-7] -консоли
Ctrl+Alt+F2 - в текстовую консоль попасть
Ctrl+Alt+F7 - обратно в графику

ftp.yandex.ru - скачать дистрибутивы linux

cat /etc/os-release - версия ОС

whoami - кто я
id - посмотреть группы пользователя

sudo - от полязователя root выполнить команду, если ты входишь в группу admin
sudo useradd -m kolya
sudo passw kolya

su kolya  - сменить пользователя

sudo su - переключиться на root
sudo passwd - задать пароль root

sudo touch /tmp/file1 - создать файл от иени root

ls /usr  - посмотреть содеджимое папки

ls -a - покажет скрытые файлы
ls -l - покажет атрибуты файлов

ls -al

history - посмотерть историю команд

--color - опция линуксовая, где то фрибсдэшная бывает без дефисов или с одним дефисов, 
          где то многобуквенная или однобуквенная 

/bin/ls --color  - посмотерть содержимое bin и покрасить папки

!! - выполнить предыдущую команду
sudo !! - пред команда, выполнить от рута

ctrl+R - поиск по истории команд

sudo mcedit /etc/inputrc - настроить клавиши PgUp и PgDn для поиска по истории команд 
     (раскоментировать пару строчек)
! Пример:   ls <PgUp>

date - дата
cal - календарь

man 7 hier - посмотерть описание директорий

Создавать пользователь может только в :
/home/<имя пользователя>       

 ~/                 - домашняя директория пользователя
/tmp				- после перезагрузки чистится

/etc/bash.bashrc  - общие настройки командной строки
/home/tux/.bashrc - настройки командной строки пользователя, переписывает системные
/home/tux/.bash_history - история команд пользователя


echo "привет" - вывести строку
echo $HOSTNAME - вывести значение переменной
echo $USER
echo "echo Привет TUX" >> /home/tux/.bashrc 
      - добавить в конец файла строку, которая будет выводить строку "Привет TUX "когда пользователь tux залогинится
/etc -          конфигурации
/etc/hostname - имя системы
/etc/resolv.conf - настройки ДНС

sudo apt install ssh - установить службу ssh
/etc/ssh - настройки ssh

find /etc -type d | nl   - найти все директории в etc, nl - нумерация строк 
find /etc -type f        -  f - найти все файлы

file - посмотреть тип файла, текст или картинка и тд
file /etc/passwd 

file определяет тип файла путем залезания внуть файла и там есть в начале файла заголовок
например #!bin/bash значит это скрипт, ну или необязательно вначале файла заголовок

find /etc -type f -exec file -b {} +   !посмотреть в директории etc какие есть типы файлов
find /etc -type f -exec file -b {} + | sort | uniq -c | sort -n


/bin      - системные пользовательские утилиты      (аналог windows system32)
/usr/bin  - дополнительные утилиты (аналог windows Program files)
/sbin     - системные рутовые улититы ip, iptables и другие
/usr/sbin - дополнительные рутовые утилиты

which ssh		-посмотреть где располагается бинарник (утилита)
which nano
which vi 

who      - посмотреть кто подключен к терминалу
w		 - тоже посмотреть пользователей

systemctl srart ssh
systemctl status ssh    - посотреть статус службы 

ss -lntup | qrep 22  - посмотреть какая служба использует 22 порт (подобие netstat)
ps 6441              - расположение процесса

echo $PATH     - посмотреть какие исполняемые директории определены у пользователя
               - у root добавляется /sbin

sudo mkdir /my_directory
sudo chown tux /my_directory         - смена владельца на tux папки 
chmod +x /my_directory/my_script     - права на исполнения своего скрипта

PATH="$PATH:/my_directory" 			 - в существующую PATH добавили еще свою 
                                       директорию my_directory со своими исполняемыми файлами например
echo 'PATH="$PATH:/my_directory"' >> ~/.bashrc   - добавим в свой конфиг. файл постоянно чтоб добавлялось

my_script     - теперь можем запустить свой скрипт



/lib /lib64    - библиотеки, имеют расширенеие .so (shared object, аналог dll в windows)
/lib/modules   - модуль ядра, драйвера для файловых систем, для сетевых карт и т.д.
/usr/lib       - библиотеки доп. программ

du -sh /lib  	- посмотреть размер директории
du -sh /lib /lib64
			   
ldd /bin/ls			- посмотреть какие библиотеки использует бинарник ls, 
                      без них не запустится команда ls
ldd /usr/bin/mc     


/boot    -  директория конфига загрузчика
/usr     -  ресурсы (шрифты, темы, звуки, документация)
    /usr/bin
	/usr/lib    
	/usr/share  - различные ресурсы
	/usr/...    - остальное то что не подается класификации



!разбираемся с файлами системы
	
which FILE -  посмотреть где располагается бинарник (утилита)
file FILE  - посмотреть тип файла

dpkg -i /....       - установка пакета
dpkg -S /etc/FILE   - с какого пакета установлен 
dpkg -s PKG			- информация о пакете, описание
dpkg -L PKG			- какие файлы из этого пакета

dpkg -l             - список установленных пакетов
dpkg -l | grep ssh  - найти как называется пакет утилиты ssh

dpkg -L vim-common | grep "/lib" | nl     -посчитать количество библиотек в пакете vim-common с учетом директорий
dpkg -L vim-common | grep "/bin" | nl     -посчитать количество бинарников в пакете
dpkg -L vim-common | grep "/etc" | nl     -посчитать количество файлов конфигурации в пакете
                           doc, man, info -посчитать мануалы

ls -d --color $(dpkg -L vim-common) | nl    - подсветить файлы, папки						   
						   

less /etc/ucf.conf      -  less просмотр файлов постранично (для удобства больших файлов с навигацией)
ps aux | less           

! поменять пароль если забыл ---> Урок 1-4  37 минут

/dev     -  файлы устройств, через которые можно взаимодейсвовать с устройствами

tty      - посмотреть к какому терминалу ты подключен (/dev/pts/0), pts - псевдотерминал

echo Кто здесь? > /dev/pts/1      -   отправить сообщение в другой терминал

Сtrl-Alt-F3  ---> переключится в терминал /dev/tty3
echo Кто здесь???? > /dev/tty3   

ls -l /dev/tty2 /dev/tty3        -  посмотреть кто когда логинился???
ls -l /dev/tty?                  - ! посмотреть все терминалы, права

ps -A | grep tty                 - посмотреть что на какой консоли запущено
ps -A f | grep tty               - подробнее
ps -A | grep tty | sort -k2      - сортировка по второму столбцу


/dev/lp0      - принтер, можно на печать с помощью echo отправить
/dev/null     - в никуда отправить

find /etc/ -name "*passwd*" > /tmp/File1.txt   - найти файлы содержащие в названии passwd и оправить в файл
find /etc -name *passwd* > /tmp/File1.txt      - такой же результат

find /etc -name *passwd* 2> /dev/null          - на экран выведен будет только полезный вывод, то что нашел только (2> - второй вывод с ошибками доступа отправить в никуда) 

grep "tux" /etc/passwd
grep "tux" /etc/passwd && echo Пользователь существует                -  если найден пользователь то будет вывод и сообщение
grep "tux" /etc/passwd > /dev/null && echo Пользователь существует    -  полезный вывод не показывай, только факт (echo ...)

/dev/cdrom    - ссылка на сдром
/dev/st0       - сдром
/dev/sd*      - диски
/dev/sda1     - разделы

lsblk         - посмотреть диски и разделы

/dev/input/event  - клавиатура, можно считать что набирается с правами root (Урок 2-1, 29 минут)
/dev/input/mice   - мышка


ls -l    - первая буква перед правами это тип файла, всего 7 типов файлов
           d  - директория
		   -  - текстовый файл, обычный регулярный файл
		   b  - блочный файл   (sda1)
		   c  - символьный специальный файл
		   l  - линк ссылка
		   s  - сокет, файл для межпроцессорного взаимодествия
		   p  - файл очереди, именованый канал pipe (fifo)
		   
		   
findmnt    -   помотреть дерево куда что смонтировано

/dev    -  находится в оперативной мамяти, виртуальная файловая система
/sys    -  тоже виртуальная файловая система, на самом деле файлы там пустые, но через них можно посмотреть информацию о параметрах устройств

cat /sys/class/net/eth0/address    -  посмотреть мак-адрес  и т.д.

echo 1 > /sys/class/leds/input2\:\:numlock/brightness  -  включить 1, 0 выключить лампочку numlock

можно по ssh подключиться и посмотреть все о устройствах через /sys


/proc    - тоже виртуальная файловая система

cat /proc/version   - файлик нулевой но покажет версию ОС
cat /proc/uptime    - информация о времени работы ОС
cat /proc/cpuinfo   - информация о процессоре

/proc/sys    - параметры ядра

/proc/sys/net/ipv4/ip_forward      -  включение маршрутизации, 1 - включена, 0 - выключена
/proc/sys/net/ipv4/ip_default_ttl  -  изменить ttl, 64 - по умолчанию

ps -A             - посмотреть процессы, программы, номер, дальше можно посмотреть директорию программы
ls /proc/7387

/opt        - обычно устанавливается коммерческий софт, типа директории /usr

/media      - монтируются различные устройства доступные для всех пользователей

/mnt        - монтировать руками в эту папку

mount -t cifs //192.168.205.222/share /mnt -o usernane=Admin,password=P@ssw0rd     - примонтировали рашарянное папку другого ПК

mount /mnt/net/orel-current.iso /mnt/iso     - примонтировали файл iso (содержимое) в отдельную папку, сама папка net тоже примонтирована как сетевая шара например
ls /mnt/iso

unmount /mnt/net    - отмонтировать не забыть

cat /etc/fstab      - посмотреть что куда смонтировано (директории)
blkid				- посмотреть название директорий


/var    		    - изменяемые данные (находятся логи, кэш и тд)
/var/log/message  	- системный лог

tail -f /var/log/xxxxxx.log    -    в режиме реального времени можно видеть логи (tail -f ....)

find / -mmin -5		- посмотреть что у нас поменялось за последнии 5 минут какие файлики
find /var -mmin -5	
find / -mmin -5 | grep var

/home и /var  лучше делать эти директории на отдельный диск (разделы диска) так как они всегда меняются 




/run     -    похожа на /var, только хранится данные  в оперативке, файловая система tmpfs

df -hT /var  /run   -  посмотреть о директориях включая Тип 

cat /run/sshd.pid 	    - посмотреть идентификатор службы процесса
systemctl stop sshd 	- погасить службу, (происходит kill <pid>) файлик удалится, при старте службы создастся заново с новым pid
kill 568
ps 568      			- убедится что нет службы    ps [pid]  

/srv			-	всякие директории служб которые неизменяемые надо из /var перенести сюда (к примеру /var/www  если запущен apatch у нас)


top     - процессы
________________________________________

встроенная справка


ls --help
ls --help | egrep -- "^   *-(l|d|a|L)"     -вывести информацию о конкретных ключах
man ls									- мануал в директории /usr/share/man
man -P cat ls
man -L en ls                          - английская версия мануала по ls
man man                               - посмотреть какие есть маны 8 типов , по командам, по конфигам, по файлам (man5) и другие
man shadow                            - описание файла shadow
less  -      интерактивный просмотр  
			/<слово> - поиск
            h        - помощь во многих интерактивных командах или ?
			n 		 - вперед поиск
			N 		 - назад поиск
            &/<слово>  - только эти строчки отобразить 
			G        - переход по тексту пример перейти на строку 345G
            P        - в начало файла тоже самое 1G			

В мануале [] - необязательные опции,  {} - список для опции  (примет --sort={time,size .....})
ls -l --sort=time
ls -rtl                  -осортировать удобно по времени и в обратном порядке
ls -dl                   -отобразить не содержимое а саму директорию
ls -d /etc/a*            -отобразит все директории на 'a' а не содержимое их
ls -ld /tmp/[fF]*.*      -вывести файлы начинающиеся на f или F

При чтение man можно пользоваться поиском также как в less

whatis     или   man -f       - отобразить из man только назначение команды 
whatis mc	(man -f mc)	      - 

whatis passwd                 - отобразит несколько манов если есть(по команде и по файлу) 
whith passwd
ls -lh /usr/bin/passwd /etc/passwd
file /usr/bin/passwd /etc/passwd
man 5 passwd                       - откроет ман по файлу, а так по умолчанию по команде
man -a passwd                      - откроет все маны по очереди

man 7                            -   расположены описания про общие технологии

apropos                -  ищет по всем манам определенное слово, т.е. косвенно найти можно команду определенную
apropos pdf
apropos directories

touch /tmp/file1	
find /etc/ -type f -newer /tmp/file1    - поиск в директории etc файлов новее чем файл file1 в директории tmp
useradd -m anton                        - создали пользователя (-m создать домашний каталог пользователя)
adduser anton                           - есть такая утилита в astralinux, ключи не надо использовать, каталог сам создается, и другое
passwd anton ****
find /etc/ -type f -newer /tmp/file1    - еще раз смотрим и увидим в какие файлы добавилась информация про пользователя anton, где хранятся пароли (/etc/shadow)
grep --color anton /etc/passwd /etc/group ....   - теперь смотрим что в эти файлы добавилосб


grep --color anton /etc/shadow      - посмотреть (найти и подсветить пользователя) хэш пароля и другие параметры
passwd -S anton                     - посмотреть когда была смена пароля в читабедьном виде

echo $[2**3]                   - как калькулятор 2 в степени 3 будет 8
echo $[26**5/400/3600]         - формула сколько часов надо чтоб перебрать пароль из 26 букв зная что пароль из 5 символов и программа перебирает 400 слов в секунду (будет 8 часов)

Взлом пароля Урок 2-3 самое начало до 20 минут

/etc/passwd     -     в файле в конце пользователя прописывается что запускать при логине пользователя (/bin/bash - по умолчанию командная строка, можно mc, или скрипт)

/usr/share/info     -  полная документация по команде

info grep    -   документация о grep
pinfo grep   -   документация с подкраской если установлен pinfo

клавишы для работы с info -  q, TAB, Enter, l (last), s (search)  }{ - повторить поиск вперед назад

= пример установки пакета документации=
apt search imagemagick | grep doc
apt install imagemagick-doc

ls /usr/share/doc/imagemagick-doc/html/
В браузере можем открыть index.html, удобно смотреть чем через ман

opennet.ru    - ест раздел по манам по командвм MAN'ы, очень удобно



= копирование =
cp -rv /dir1 /dir2
cp -rv /dir1/* /dir2
	-r    - рекурсив
	-v    - verbose  отображение что куда скопировали
	-a    - копирование также права нафайл
rsync --progress /dir1 /dir2     - инкрементное копирование

= перенос.переименование =
mv -i /dir1/* /dir2 
   -i запрос подтверждения если такой файл есть
   
= удаление =
rm -rf /dir1              !!!!!!!!!!!!!!!
    -r   - рекурсив      (аккуратно rm -r если используется от рута и переменные в качестве директорий, ошибка в букве и снесет не то)
	-f   - молча        (лучше никогда не использовать -rf от root)
	                     если где то нечайно пробел поставить то можно грохнуть всю системную директорию или полностью /
rm -i file1
unlink file   - удаляет только один файл

= директории = 
mkdir -p /dir1/dir2    - создать директорию
      -p               - создаст недостающие родительские директории
rmdir dir              - удаляет пустые директории
                        
____________________________________________________________

35 минут пропущено между уроками 2-3 и 2-4
____________________________________________________________

;     -    запустить последовательно как предыдущая команда закроктся
&     -    запустит в раз все программы
xeyes ; xclock ; xcalc
xeyes & xclock & xcalc

xcalt &    -  значит команда будет работать но командная строка будет доступна
jobs       - посмотреть фоновые процессы программы

== fork-бомба - запустить процесс которые сам себя запускает два раза ==


===  Тема SHELL

shell    это командная строка

В линуксе обычно  bash  (/bin/bash).   Есть еще sh, csh, zsh, fish
bash   ----  Bourne again shell   - улучшенная версия sh

Горячие клавиши

Ctrl + l     - очистить экран
Ctrl + u     - очистить до начала строки (вырезать до начала строки от курсора)
Ctrl + к     - очистить до конца строки (вырезать до конца строки от курсора)
Ctrl + y     - вставить обратно

/bin/sh     - запустить другой шелл кластический - Bourne shell
apt install sh csh zsh fish    - установить несколько других shell

= fish для начинающих хорош, подкрашивает все =

= определить и посмотереть пременную в bash (в другом шелле синтаксис будет по другому)=
MYNUMBER=1205
echo $MYNUMBER
_______________________________________________________________________

ДЕНЬ 3
______________________________________________________________________

cal > /tmp/FILE.txt 			-   перенаправление стандартного вывода (полезного вывода)
cal 1> /tmp/FILE.txt 			-	тоже самое

Выводом может быть 255
0,1,2 - стандартные выводы
Программа во время имеет много выводов (например firefox) - (куки, история и т.д. )


1:stdout
2:stderr   -  ошибки
0:stdin

&>      - и полезный и ошибки отправить в файл

ls -l /proc/26222/fd      -  посмотреть выводы процесса номер 26222 

пример:
find /etc/ -type f > /tmp/file1.txt 2> /dev/null 58> /tmp/file2.txt              -  
ls /home/ /lalala 2>/dev/null  	   								- проигнорировали ошибки
ls /home /lalala &> /tmp/FILE1/txt  							- &>  и полезный и ошибки отправить в файл
	
 |  - pipe - конвейер - перенаправление стандартного вывода (1>) на стандартный ввод другой команде 

cat /etc/passwd | grep "/home" | cut -d: f1 | sort | tr "a-z" "A-Z" | nl   -  из файла passwd взяли строки с "/home", 
																			  вырезали первое поле (столбец), где имена пользователей
																			  заменили на заглавные буквы
                                                                              отсортировали и пронумеровали
ls /home /lalala | grep --color "."    - подкрасить полезный вывод  

<   - стандартный ввод (откуда читать данные)


tr "A-Z" "a-z"  < ~/DATA      -   "<"   - дали на вход данные с каторыми надо транслейт сделать к примеру   
sort < /tmp/FILE1/txt         - вывести данные и отсортировали

mail -s TEST1 kolya@localhost < /etc/os-release    - отправить локальное письмо с темой TEST1 и содержимым файла os-release (пользователь может посмотреть письмо в /var/mail/kolya)
!systemctl status exim4.service                    - локальный почтовый сервер

(grep AA ~/DATA   - найди AA  в файле /home/DATA)

>>  - дописать вывод

date > /tmp/file1    - вывести текущую дату в файл
date >> /tmp/file1   - дописать вывод в файл

<<     - ожидать ввод чего то конкретного
																			  
cat >> /tmp/file1.txt << EOF       - к примеру не используя редактора можно создать файл (печатать что нибудь в файл, пока "EOF" ненапечатаешь)
																			  
<<<   -   ? не понял      


echo $HISTFILESIZE   
echo $HISTSIZE        - посмотреть количество команд хранимых в истории
______________________________________________________
ФИЛЬТРЫ

head       -  первые 10 строк
head -n1   -  первые 1 строка
tail       -  последние 10 строк
tail -n3   -  последние 3 строки
tail -n+7  -  вывести конец файла начиная с 7 строки
wc -l      -  количество строк
wc -w      -  количество слов
wc -c      -  количество символов

cat /etc/os-release |tail -n1 |wc -c    - посчитать количество букв в первой строке файла
ls /home | wc -l						- поссчитать количество объектов в папке home

cat -n /tmp/file1.txt    - пронумеровать строчки
cat -b /tmp/file1.txt    - пронумеровать непустые строчки
cal | cat -n             - пронумеровать вывод команды       

grep -n "tux" --color /etc/passwd  - пронумероватьстроку в которой нашел tux и подкрасить
________

grep "home" --color /etc/passwd | sort      - отсортировать
grep "home" --color /etc/passwd | sort -r   - отсортировать в обратной порядке         
grep "home" --color /etc/passwd | shuf      - в случайном порядке перемешать
grep "home" --color /etc/passwd | shuf -n1  - случайную строчку показать одну

shuf -n5 /etc/passwd > /tmp/list1               - отаправить 5 случайных строчек в другой файл
cat /tmp/list1 | sort -t: -k3                   - отсортировать по 3 колонке
cat /tmp/list1 | sort -t: -k3 | column -t -s:   - заменить двоеточие на колонки для удобства

unic      - уникальные строчки
sort -u   - или так уникальные строчки !!!!!!!!!!!!!!!!!!!!!!!!!!!!

cat ~/file1.txt | uniq             -    отобразит уникальные строчки попарно сравнивая
cat ~/file1.txt | sort |uniq       -    отобразит только уникальные строчки             !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
cat ~/file1.txt | sort |uniq -с    -    отобразит еще сколько было уникальных строчек   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

cut - вырезать из файла

cat ~/file1.txt | cut -c1-5,10-20                   - вырезать символы с 1 по 5 ....
cat ~/file1.txt | cut -d: -f1                       - вырезать поле  (-f1-3,5   - с 1 по 3 поля вырезать и 5-ое)
cat /etc/passwd | grep "/home" | cut -d: -f1 | sed "s/$/@academy.ru/"   - пример
                                                                        - взяли первое поле и добавили к каждой строке @academy.ru, получили список емэйлов
sed .....         - добавлять что то
| grep -v .....    - исключать что то

Пример:

for M in $(cat /tmp/MAIL.list);do mail -s "Tebe pismo" $M <<< Plyashi ;done  - отправить письма адресатам из файла


diff                                  - разницу смотреть 
diff /etc/passwd /etc/passwd-old      - разницу между файлами посмотреть

mcdiff /etc/passwd /etc/passwd-old    - в mc смотреть разницу
vimdiff /etc/passwd /etc/passwd-old   - в редакторе смотреть разницу
_________________________________

Урок 3-1 25-ая минута про sed (интересно!!!)

sed   -   заменить, добавить что то (мощный РЕДАКТОР - что можно сделать с файлом) можно этой командой заменить другие grep, tail и др.

cat /tmp/file1.txt | sed "s/text1/text2/"     -   замена слова text1 на text2 в файле,   s - замена  (1,5s  -  внекоторых строках замена
cat /tmp/file1.txt | sed "s/text1/text2/g"    -   g - глобально 

cat /tmp/file1.txt | sed "/text1/d"            - удалить
cat /tmp/file1.txt | sed "/text1/i-------"     - вставить после строки где есть text1 "-------"
____________________________________________

awk   - текстовый редактор с работами с колонками, тоже мощный инструмент!!!!

cat /tmp/list.txt | awk -F":" '{print $1,$3}'      -  вывести из файла колонки 1 и 3 если разделены они двоеточием
cat /tmp/list.txt | awk -F":" '{print $1"\t:",$3}'  -  разделить табуляцией \t  и двоеточием к примеру 
_______________________________________

grep     РЕГУЛЯРНЫЕ ВЫРАЖЕНИЯ

--color
-i		-игнорировать регистр
-v		-не выводить совпавшие строки
-r		-рекурсивно                       (включает опцию -H чтоб показать файл)
-q		-ничего не выводить
-o		-только совпадения c шаблоном вывести
-w      -искать слово целиком
-F      -не использовать символы как регулярные выражения
-E      -расширенные регулярные выражения

grep "tux" --color /tux/passwd

alias grep="grep --color"       - чтоб всегда подсвечивало

^
$
.
[a-c]
[^a-c]   -отрицание диапазона
*        -любое количество предыдущего символа (включая отсутстввие этого символа)  -  ноль и более раз

grep "^a" /etc/passwd
grep "0...0" /etc/passwd    -  ...-любые 3 символа
grep "^[a-z][a-z][a-z][a-z]:" /etc/passwd     - показать строки с пользователям из четырех букв
grep "^[^:][^:][^:][^:]:" /etc/passwd         - или так можно

grep "^[a-zA-z][a-zA-z]:"  - так
grep -i "^[a-z][a-z]:"     - или так

grep -o "^[^:][^:][^:][^:]:" /etc/passwd | tr -d ":"     - вывести  только пользователей из четырех символов и удалить двоеточие которое в конце

Примеры полезные:

grep -r "192.168.205.101" /etc       -  поиск файлов где прописан наш ip  (можно -rn  чтоб номер строки показать)

grep -rF "192.168.205.101" /etc      -   -F -не воспринимать спец символы типа "точка" как регулярки
grep -r "192\.168\.205\.101" /etc    -   или так   \. 

grep "ro*t" /etc/passwd              -   rt   root   rooooot    -такие строки выведет

grep -o "[0-9]" /etc/passwd | sort | uniq -c      - вывести только цифры из файла и подсчитать сколько какой цифры
grep -o "[0-9]*" /etc/passwd | sort | uniq -c     - вывести только числа из файла и подсчитать сколько каких чисел

grep "^a.*bin" /etc/passwd                        - начала на a и содержат bin

wget "https://google.com"             - выкачать страницу в дикущую директорию index.html
wget "https://google.com" -O -        - вывести содержимое старницы на стандартный вывод (-O -)

wget "https://rg.ru/kontakty/"
wget "https://rg.ru/kontakty/" -O - | grep -o "[a-z]*@[a-z]*\.ru"                        - вывести e-mail которые есть на страницы  
wget "https://rg.ru/kontakty/" -O - | grep -io "[a-z0-9_.-]*@[a-z0-9_.-]*\.[a-z]*"       - дефис если его ищем тоже, то надо в квадратных скобках ставить последним иначе как диапазон будет восприниматься
grep -io "[a-z0-9_.-]*@[a-z0-9_.-]*\.[a-z]*"  index.html | sort -u | nl                  - !!!!!!!!!!!!!!!!!!!!!!!! 


Расширенные регулярки

egrep   либо   grep -E

+        - предыдущий символ один и более раз (в отличие от *  - где ноль и более раз)
?        - предыдущий символ ноль или один раз
{2,15}   - предыдущий символ от 2 до 15 раз
{0,1}    - аналог ?
{0,}     - аналог *
{1,}     - аналог +

grep -Eio "[a-z0-9_.-]+@[a-z0-9_.-]+\.[a-z]+" index.html | sort -u     - более правильно чем с *
grep -o 'mailto:[^"]*' index.html | sort-u | cut -d: -f2 | nl         - тоже самое - список email   (mailto есть как ссылке в коде на странице)

grep -E "ro{0,1}t" /etc/passwd
grep -E "[0-9]{5}" /etc/passwd               - найти  строки с 5 значными числами
grep -E "(root|tux|vasya)" /etc/passwd       - найти  строки со словами или root или ....


задание с сайта вычислить:  (цыфры) цифры-цифры-цифры      - перед скобками +7 или 8 или ничего, перед и после скобок или пробел или нет, в скобках от 3 до 6 цифр или дефис, после скобок ....

(\+7|8|)    -  +7 или 8 или ничего
 ?          -  пробел и знак вопроса - это пробел или ничего
 \(         -  скобка
 
grep -oE "(\+7|8|)[ -]?\([0-9]*\)"     - дальше сделать задание
grep -oE "(\+7|8|)[ -]?\([0-9 -]{3,5}\)[ -]?[0-9 -]{5,10}" index.html | sort -u |nl     - Решение задания

В LibreOffice можно использовать регулярки (найти и заменить)
_______________________________________________________

ПРАВА и ПОЛЬЗОВАТЕЛИ

/etc/passwd           - учетки, есть также системные
/etc/login.defs       - дефолтные настройки учеток, диапазоны идентификаторов и системные там и пользовательские 
id root               - у root идентификатор 0 (uid=0) - значит неограниченные права в системе, может вместо root и другой пользователь быть но он один такой с индетификатор 0

chmod 000 /tmp/file1.txt  -  убрали права на файл, но root все равно будут права на файл     !!!права на файл на рута не распространяются !!!!  

useradd nikola   - создать пользователя
userdel nikola   - удалить полльзователя
useradd -m -s /bin/bash -G astra-admin nikola
-m   - создать домашнюю директорию
-s   - какой shell использовать
-G   - включить в группу пользователя       astra-admin - группа из под который можно попадать в root без пароля, выполнять команды от рута

id nikola  - посмотреть о пользователе

adduser nikola2  - интерактивная команда создания пользователя, пользователя добавляет в различные дефолтные группы
id nikola2
deluser nikola2  - удаление пользователя

и у adduser и у useradd есть конфиги, в которых можно настройки поменять
cat /etc/adduser.conf
cat /etc/default/useradd

systemctl status ssh
systemctl apt install ssh
systemctl --now enable ssh   - добавить службу в автозапуск

sudo groupadd wheel                - создать группу    (вообще wheel это важная группа где она есть, типа группы админов)
sudo useradd glavbuh -m -G wheel   -   можно так --   useradd -m -G wheel glavbuh
sudo passwd glavbuh

sudo grep glavbuh /etc/shadow      - храняться хэши паролей и другие параметры
sudo chage -m1 -M30 -W3 glavbuh    - chage меняет параметры параметры пользователя в shadow, как часто менять пароль и т.д.
man shadow

sudo chage -d0 glavbuh                     - чтобы сменить пароль при следующем входе в систему   !!!!

echo "glavbuh:passw0rd" | sudo chpasswd    - тоже смена пароля пользователя от рута !!!!!


groupadd buhi
usermod -G wheel,buhi glavbuh              - изменить членства в группах, если просто одну группу указать после -G, то она одна и останется
usermod -a -G buhi glavbuh                 - добавить пользователя в группу buhi   (опция -a)   !!!!!!
id glavbuh                                 - проверка

При создании пользователя ему создается одноименная группа
/etc/login.defs
   USERGROUPS_ENAB yes     - этот параметр определяет создавать одноименную группу
   ENCRYPT_METHOD SHA512   - метод хэширования пароля
   
не рекомендуется удалять пользователя, после удаления его файлы будут принадлежать его UID
и при создании другого пользователя ему может быть выдан тот же самый UID (по порядку) и он получит права на файлы пред.пользователя
лучше блокировать учетки

passwd -l nikola    - заблокировать пользователя, в файле /etc/shadow  перед паролем поставиться !
passwd -u nikola    - разблокировать пользователя   (удалится ! )

find /home -user nikola                        - найти все файлы принадлежающие пользователю nikola
find / -user nikola -exec chown tux {} +       - сменить владельца у файлов nikola на tux,  иногда надо делать перед удалением пользователя
find /home -nouser                             - посмотреть файлы которые ниокму не принадлежат, такие после удаления пользователя бывают
find /home -nouser -ok rm -r {} \;             - удалить файлы которые никому не принадлежат (-ok значит спрашивать перед удалением в отличие -exec)

userdel -r nikola                              - удалить пользователя с домашней директорией

getent passwd     - покажет список пользователей, покажет также с AD, LDAP если используется
getent group      - покажет список групп

________________________

ПРАВА ДОСТУПА

ls -l /etc/shadow

-rw-r-----

1.  -     тип файла
2.  rw-   права для владельца                       3-я колонка
3.  r--   права для основной группымпользователя    4-я колонка  
4.  ---   права для всех остальных   (правильно говорить "остальные", а не "все")

3 и 4 колонка может называтся одинаково но это разные объекты, к примеру пользователь tux и группа tux

sg video      - сменить основную группу пользователя на video

/etc/passwd   - там прописана основная группа пользователя  ???  
/etc/group    - там все остальные группы    ???

chmod u=r,g=rw,o=rwx /home/file1.txt     - поменять права на файл   !!!!!!!      или к примеру (u=rwx,g=rw,o=)        

ПРАВА ЧИТАЮТСЯ СЛЕВА НА ПРАВО!!!   - если у владельца нет прав на файл например, то он не прочитает файл даже если есть права у его группы и у остальных

chown glavbuh ~/file1.txt           - сменить владельца файла

usermod -a -G buhi tux              - добавить пользователя tux в группу buhi  !!!!!!!!

!!!! Если у владельца нет прав на файл, то он может просто выдать права на файл себе, переназначить

chmod u=rwx /home/file1.txt

Права на файл сложновато граничить, Чтобы ограничить доступ пользователю к файлу:       ??????????????????
- добавить пользователя в некую группу, и ограничить этой группе
- или для всех остальных ограничить

chmod ugo=r /bin/ZP     - выставить всем на чтение только, но можно его все равно запустить через "интерпритатор" как бы прочитать и он запуститься

Пример запуска такого файла:                !!!!!!!!!!!!!!!
/lib64/ld-linux-x86-64.so.2 /bin/ZP

_______________
!!!!Задачка сделать на файл права программисту менять, пользователям в группе бухов запускать, остальным ничего

cp /usr/bin/cal /bin/ZP
chown programmist /bin/ZP             - сменили владельца  (все через sudo)
chgrp buhi /bin/ZP					  - смена группы							
chown programmist:buhi /bin/ZP        - или так сразу смена владельца и группы
chmod u=w,g=x,o= /bin/ZP              - права
ls -l /bin/ZP                         - проверка
___________

chmod u-w,g+x,o=rw /bin/ZP            - u-w  удалить право,  g+x   добавить право 
chmod go-x /bin/ZP                    

___________________________
Цифренное обозначение прав

r=4, w=2, x=1            !!!!!!!!!!!!!!!

666           rw- rw- rw-
--xr--rw-     146 (10-чная система)     001 100 110 (2-чная система)    

chmod 640 /bin/ZP         - выставить права  rw-r-----
chmod 775 /bin/ZP         - выставить права  rwxrwxr-x
__________________________________________________

stat /bin/ZP              - посмотреть свойства файла
stat -с %s /bin/ZP        - посмотреть отдельно размер можно к примеру

Можно ACL (acees control list) на файл вешать, чтобы можно было на файл много пользователей много групп повешать

getfacl /bin/file1                      - посмотреть права (через acl)
setfacl -m u:programmist:w /bin/file1   - установить на файл права пользователю программиста на запись
setfacl -m g:wheel:rw /bin/file1        - группе дать права на файл  (id посмотреть входит ли пользователь в эту группу, если входит то права группы получит)

Если пользователю дали права на этот файл, то эти права перебивают права на группу в которую он входит
Если на файл повешать ACL то ввыводе ls -l /bin/file  будет + "плюсик" (--xr--rw-+)  выставлен на файле после разрешений

setfacl -m m:r /bin/file1  - поменять маску на файл ??????????? 20-ая минута Урок 3-4

Права r w x - это права на содержимое файла (но не метаданные, типа имена файла)
Объекты прав доступа - это файлы (директория, устройства)
Субъекты прав доступа - процессы (а не пользователи). (когда пользователь залогинился, появляется процесс от имени пользователя bash ( ps - посмотреть)